{"ast":null,"code":"import _classCallCheck from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/src/RandomQ.js\";\nimport React from \"react\";\nimport './ransomQ.css';\n\nvar RandomQ = /*#__PURE__*/function (_React$Component) {\n  _inherits(RandomQ, _React$Component);\n\n  function RandomQ(props) {\n    var _this;\n\n    _classCallCheck(this, RandomQ);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomQ).call(this, props));\n    _this.state = {\n      quote: '',\n      author: ''\n    };\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RandomQ, [{\n    key: \"componentDidMount\",\n    //  fetch data from API and set it to state\n    value: function componentDidMount() {\n      var currentComp = this;\n      fetch(\"https://type.fit/api/quotes\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var random = Math.floor(Math.random() * 500);\n        currentComp.setState({\n          quote: data[random].text,\n          author: data[random].author\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // created a random number for random colors\n      var rnd = function rnd(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      };\n\n      var textColor = \"hsl(\".concat(rnd(0, 360), \",\").concat(rnd(10, 100), \"%,\").concat(rnd(0, 50), \"%)\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"quote-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: textColor\n        },\n        id: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"\\\"\", this.state.quote, \"\\\"\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: textColor\n        },\n        id: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"- Author: \", this.state.author), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.componentDidMount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"New qoute\"), /*#__PURE__*/React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        href: \"https://twitter.com/intent/tweet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 78\n        }\n      }), \" \")));\n    }\n  }]);\n\n  return RandomQ;\n}(React.Component);\n\nexport default RandomQ;","map":{"version":3,"names":["React","RandomQ","props","state","quote","author","componentDidMount","bind","currentComp","fetch","then","response","json","data","random","Math","floor","setState","text","rnd","min","max","textColor","color","Component"],"sources":["/Users/JosephChikak/Desktop/quote-generator/random-quote-generator/src/RandomQ.js"],"sourcesContent":["\nimport React from \"react\";\nimport './ransomQ.css'\n\n\nclass RandomQ extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            quote: '',\n            author: ''\n        }\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n     };\n    //  fetch data from API and set it to state\n    componentDidMount() {\n        let currentComp = this;\n        fetch(\"https://type.fit/api/quotes\")\n            .then(function(response) {\n                return response.json();\n             })\n            .then(function(data) {\n                let random = Math.floor(Math.random()*500)\n              currentComp.setState({\n                    quote: data[random].text,\n                    author: data[random].author\n                })\n     });\n    }\n    \n     render() {\n        // created a random number for random colors\n        const rnd = (min, max) => {\n            return Math.floor(Math.random() * (max - min + 1) + min);\n          };\n         const textColor =`hsl(${rnd(0,360)},${rnd(10,100)}%,${rnd(0,50)}%)`\n     \n        return(\n            <div id=\"quote-box\">\n                <h1 style={{color:textColor}} id=\"text\">\"{this.state.quote}\"</h1>\n                <p style={{color:textColor}} id=\"author\">- Author: {this.state.author}</p>\n                <div className='btn'>\n                <button id=\"new-quote\" onClick={this.componentDidMount}>New qoute</button>\n                <a id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet\"> <button className=\"btn2\"></button> </a>\n                </div>\n            </div>\n        );\n        }\n}\n\nexport default RandomQ;"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;IAGMC,O;;;EACF,iBAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IACd,6EAAMA,KAAN;IACA,MAAKC,KAAL,GAAY;MACRC,KAAK,EAAE,EADC;MAERC,MAAM,EAAE;IAFA,CAAZ;IAKA,MAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;IAPc;EAQhB;;;;IACF;wCACoB;MAChB,IAAIC,WAAW,GAAG,IAAlB;MACAC,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACU,UAASC,QAAT,EAAmB;QACrB,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACF,CAHN,EAIKF,IAJL,CAIU,UAASG,IAAT,EAAe;QACjB,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,GAAzB,CAAb;QACFN,WAAW,CAACS,QAAZ,CAAqB;UACfb,KAAK,EAAES,IAAI,CAACC,MAAD,CAAJ,CAAaI,IADL;UAEfb,MAAM,EAAEQ,IAAI,CAACC,MAAD,CAAJ,CAAaT;QAFN,CAArB;MAIR,CAVE;IAWH;;;6BAES;MACN;MACA,IAAMc,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAMC,GAAN,EAAc;QACtB,OAAON,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiBO,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;MACD,CAFH;;MAGC,IAAME,SAAS,iBAASH,GAAG,CAAC,CAAD,EAAG,GAAH,CAAZ,cAAuBA,GAAG,CAAC,EAAD,EAAI,GAAJ,CAA1B,eAAuCA,GAAG,CAAC,CAAD,EAAG,EAAH,CAA1C,OAAf;MAED,oBACI;QAAK,EAAE,EAAC,WAAR;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAI,KAAK,EAAE;UAACI,KAAK,EAACD;QAAP,CAAX;QAA8B,EAAE,EAAC,MAAjC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,SAA0C,KAAKnB,KAAL,CAAWC,KAArD,OADJ,eAEI;QAAG,KAAK,EAAE;UAACmB,KAAK,EAACD;QAAP,CAAV;QAA6B,EAAE,EAAC,QAAhC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,iBAAoD,KAAKnB,KAAL,CAAWE,MAA/D,CAFJ,eAGI;QAAK,SAAS,EAAC,KAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA;QAAQ,EAAE,EAAC,WAAX;QAAuB,OAAO,EAAE,KAAKC,iBAArC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eADA,eAEA;QAAG,EAAE,EAAC,aAAN;QAAoB,IAAI,EAAC,kCAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAA6D;QAAQ,SAAS,EAAC,MAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAA7D,MAFA,CAHJ,CADJ;IAUC;;;;EA3CaN,KAAK,CAACwB,S;;AA8C5B,eAAevB,OAAf"},"metadata":{},"sourceType":"module"}